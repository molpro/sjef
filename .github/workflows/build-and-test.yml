name: Build and test

on:
  push:
    branches: [ "main" , "master"]
  pull_request:
    branches: [ "main" , "master"]
  workflow_dispatch:

env:
  CMAKE_BUILD_TYPE: Release

jobs:

  cmake-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    container:
      # relies on repository name being all lower case
      image: ghcr.io/${{ github.repository }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v3

    - name: Check existence of build configuration file
      id: check_configuration
      uses: andstor/file-existence-action@v1
      with:
        files: "CMakeLists.txt"

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2

    - name: Configure CMake
      if: steps.check_configuration.outputs.files_exists == 'true'
      run: |
        git config --global --add safe.directory /__w/sjef/sjef
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.CMAKE_BUILD_TYPE}} -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache  --log-level=DEBUG

    - name: Build
      if: steps.check_configuration.outputs.files_exists == 'true'
      run: cmake --build ${{github.workspace}}/build --config ${{env.CMAKE_BUILD_TYPE}}

    - name: Test
      if: steps.check_configuration.outputs.files_exists == 'true'
      run: |
        service ssh restart
        service ssh status
        ssh localhost hostname || ssh -v localhost hostname
        cd ${{github.workspace}}/build && ctest -C ${{env.CMAKE_BUILD_TYPE}} || ctest -C ${{env.CMAKE_BUILD_TYPE}} -V --rerun-failed --output-on-failure

    - name: Build doxygen
      run: cmake --build ${{github.workspace}}/build --target sjef-doc

  python:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    container:
      image: continuumio/miniconda3
    steps:
    - uses: actions/checkout@v3

    - name: Check existence of build configuration file
      id: check_configuration
      uses: andstor/file-existence-action@v1
      with:
        files: "pysjef/build.sh"

    - name: install ssh and rsync
      run: apt update && apt install -y openssh-server openssh-client rsync && echo '#!/bin/sh\nexit 0' > /usr/sbin/policy-rc.d && service ssh start && mkdir -p ~/.ssh && ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa && cp ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys && ls -l ~/.ssh && cat ~/.ssh/authorized_keys && ssh -v 127.0.0.1 -o StrictHostKeyChecking=accept-new pwd
    - name: build and test
      run: |
        cd pysjef
        . /opt/conda/etc/profile.d/conda.sh
        conda create -c conda-forge -n pysjef -y --file requirements.txt
        conda activate pysjef
        bash ./build.sh
        pytest

